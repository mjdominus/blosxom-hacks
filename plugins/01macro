#

package macro;

#open my($f), ">>", "/dev/pts/13";
open my($f), ">>", "/tmp/macro-$<";

sub start { 1 }

sub story {
  my ($pkg, $path, $filename, $story_ref, $title_ref, $body_ref) = @_;

  my @lines = split /\n/, $$body_ref;
  my %macro;
  my %escape;
  my $MACPAT;
  for (@lines) {
    if (/^#define\s+(\S+)\s+(.*)$/) {
      print $f "<$1> => <$2>\n";
      $macro{$1} = $2;
      $MACPAT = join "|", map quotemeta, keys %macro;
      print $f "Pattern: $MACPAT\n";
      $_ = "";
      next;
    } elsif (/^#undefall\s*/) {
      %macro = ();
      $MACPAT = "";
      print $f "Pattern: $MACPAT\n";
      $_ = "";
    }       
#    for my $m (keys %macro) {
      my $old = $_;
      s/($MACPAT)/$macro{$1}/g;
      print $f "  $old\n  $_\n\n" if $old ne $_;
#    }
  }

  $$body_ref = join "\n", @lines;
  return 1;
}

1;
