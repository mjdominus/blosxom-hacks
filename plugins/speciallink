# -*- cperl -*-

package speciallink;
use URI::Encode 'uri_encode';
use strict;

sub start { 1 }

my %replace = ( wp => sub { q[<a href="] . make_url('wp', $_) . qq[">$_</a>] },
		center_image => \&center_image,
	      );

sub story {
  my ($pkg, $arg) = @_;
  my $body = $arg->{bodyref};
  my $pat = join "|", keys(%replace);

  $$body =~ s{<($pat)>(.+?)</\1>}
             { local $_ = $2; $replace{$1}->($1, $2) }gex;
}

# type here will be used once we have more than one type.
# But for now we only have one, "wp", which means "wikipedia"
sub make_url {
  my ($type, $name) = @_;
  $name =~ s/\s/ /g;
  $name =~ tr/ /_/s;
  my $uri = qq{https://en.wikipedia.org/wiki/} . uri_encode($name);
  return $uri;
}

sub trim {
  $_[0] =~ s/^\s+//;
  $_[0] =~ s/\s+$//;
  return $_[0];
}

sub center_image {
  my ($tag, $file) = @_;
  my $thumbnail = thumbnail($file);
  qq{\n\n<p align=center><a href="BLOGIMGREF/$file"><img border=0 src="BLOGIMGREF/$thumbnail"></a></p>\n};
}

sub thumbnail {
  my ($file) = @_;
  my ($main, $suf) = ($file =~ /([^.]*)(\.(.*))?$/);
  return "$main-th$suf";
}

1;
