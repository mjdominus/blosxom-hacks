
package markdown;

sub start {
  open F, ">", "/tmp/markdown.$<" or return 1;
  my $ofh = select F;
  $|=1;
  select $ofh;
  require Text::Markdown;
  print F "$$ ", scalar(localtime), "\n";
  print F "Markdown version: ", Text::Markdown->VERSION, "\n";
  print F "Markdown file: ", $INC{"Text/Markdown.pm"}, "\n";
  print F join "\n", @INC, "";
  return 1;
}

sub story {
  my ($pkg, $arg) = @_;
  my ($path, $filename, $story_ref, $title_ref, $body_ref,
      $dir, $date, $meta)
    = @{$arg}{qw/category filename storyref titleref bodyref
		 catpath datepath metadata/};
  print F "--- STORY @_\n";
  print F "  Flavour: $blosxom::flavour\n";
  print F "  Default input format: $blosxom::default_input_format\n";
  unless (exists $meta->{formatter} && lc($meta->{formatter}) eq "markdown"
          or $blosxom::default_input_format eq "markdown") {
    print F "    Does not specify markdown formatter; quitting.\n";
    return 1;
  }

  require Text::Markdown;
  
  if ($blosxom::flavour eq "html" || 1) {
    my $before = $$body_ref;
    $$body_ref = Text::Markdown::markdown($$body_ref);
print F "Converted:\n---------\n$before\n--------\nTO\n---------\n$$body_ref\n---------\n";
  } else {
    print F "Don't know how to handle markdown for flavour $blosxom::flavour; skipping.\n";
  }

  return 1;
}

1;

