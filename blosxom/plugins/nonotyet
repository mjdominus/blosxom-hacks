
package nonotyet;
my $now = time;
my %omit;

sub start { 
    $blosxom::testmode = $ENV{SCRIPT_NAME} =~ /testblog/;
#    $blosxom::show_future_entries = $blosxom::testmode;
    open F, ">", "/tmp/nonotyet";
    print F scalar(localtime), " $$ testmode: $blosxom::testmode\n";
    return 1;
}

# Suppress articles with "notyet" files
sub filter {
  my ($pkg, $f) = @_;
  for my $k (keys %$f) {
    (my $notyet = $k) =~ s/\.blog$/\.notyet/;
    (my $file = $k) =~ s/^$blosxom::datadir//o;
    $file =~ s/\.\w+$//;
    print F "$file $k $f->{$k}\n";
    if ($f->{$k} > $now + 86400 * 14) {
      # completely suppress articles more than two weeks in the future,
      # even in test mode
      print F "  way too new\n";
      delete $f->{$k};  
    }  elsif (-e $notyet || $f->{$k} > $now) {
      print F "  notyet file\n" if -e $notyet;
      print F "  too fresh\n" if ! -e $notyet;
      $omit{$file} = 1;
      unless ($blosxom::testmode) {
        print F "  and not in test mode\n";
        delete $f->{$k};
      }
    }
  }
  return 1;
}

sub story {
  my ($pkg, $path, $filename, $story_ref, $title_ref, $body_ref) = @_;
  return 1 unless $blosxom::testmode;
  my $q = "$path/$filename";
  $$body_ref = qq{<p><font color="red" size="+1">Will not appear in live blog</font></p>} . $$body_ref
    if $omit{$q};
}

1;

